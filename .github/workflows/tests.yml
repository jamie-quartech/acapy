name: Tests

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      os:
        required: true
        type: string

jobs:
  tests:
    name: Test Python ${{ inputs.python-version }}
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          cache: 'pip'
          cache-dependency-path: 'requirements*.txt'
      - name: Install the project dependencies
        run: |
          pip install poetry
          poetry install --all-extras
      - name: Tests
        run: |
          poetry run pytest --cov --cov-report lcov 2>&1 | tee pytest.log
          PYTEST_EXIT_CODE=${PIPESTATUS[0]}
          if grep -Eq "RuntimeWarning: coroutine .* was never awaited" pytest.log; then
            echo "Failure: Detected unawaited coroutine warning in pytest output."
            exit 1
          fi
          exit $PYTEST_EXIT_CODE
      - name: Coveralls Parrallel
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel: true
          debug: true
          flag-name: python-${{ inputs.python-version }}
      # - name: Pytest coverage comment
      #   uses: MishaKav/pytest-coverage-comment@v1.1.51
      #   with:
      #     pytest-coverage-path: pytest.log
      #     title: Coverage Report - See coveralls report in PR Tests action for full ui and details
      #     badge-title: Unit Test Coverage
      #     report-only-changed-files: true
  code-coverage:
    name: Generate code coverage report
    runs-on: ${{ inputs.os }}
    permissions:
      pull-requests: write
    needs: tests
    if: ${{ always() }}
    steps:
      - name: Coveralls Finished
        id: coveralls-finished
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          debug: true
          parallel-finished: true
          carryforward: "python-${{ inputs.python-version }}"
